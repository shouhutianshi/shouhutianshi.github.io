<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[jquery-lazyload]]></title>
      <url>http://yoursite.com/2016/10/13/jquery-loadLazy/</url>
      <content type="html"><![CDATA[<h3 id="jQuery-lazyload的用法"><a href="#jQuery-lazyload的用法" class="headerlink" title="jQuery lazyload的用法"></a>jQuery lazyload的用法</h3><h4 id="插件描述：jQuery图片延迟加载插件jQuery-lazyload-使用延迟加载可提高网页下载速度。在某些情况下也能帮助减轻服务器负载。"><a href="#插件描述：jQuery图片延迟加载插件jQuery-lazyload-使用延迟加载可提高网页下载速度。在某些情况下也能帮助减轻服务器负载。" class="headerlink" title="插件描述：jQuery图片延迟加载插件jQuery.lazyload,使用延迟加载可提高网页下载速度。在某些情况下也能帮助减轻服务器负载。"></a>插件描述：jQuery图片延迟加载插件jQuery.lazyload,使用延迟加载可提高网页下载速度。在某些情况下也能帮助减轻服务器负载。</h4><h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><p>引用jquery和jquery.lazyload.js到你的页面</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">&lt;script src=&quot;jquery-XXX.js&quot;&gt;&lt;/script&gt;</div><div class="line">&lt;script src=&quot;jquery.loadlazy.js?XXX&quot;&gt;&lt;/script&gt;</div></pre></td></tr></table></figure>
<p>html图片调用方法<br>为图片加入样式lazy图片路径引用方法用data-original<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div><div class="line">&lt;img class=&quot;lazy&quot; data-original=&quot;img/XXX.jpg&quot;&gt;</div></pre></td></tr></table></figure></p>
<p>js初始化lazyload并设置图片显示方式<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">    $(function()&#123;</div><div class="line">         $(&apos;img.lazy&apos;).lazyload(&#123;effect:&quot;fadeIn&quot;&#125;);</div><div class="line">     &#125;)</div><div class="line">&lt;/script&gt;</div></pre></td></tr></table></figure></p>
<p>如果想提前载入图片，可以使用threshold进行设置：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$(&apos;img.lazy&apos;).lazyload(&#123;threshold:180&#125;);</div></pre></td></tr></table></figure></p>
<p>以上实例的含义是：在图片距离屏幕180px时提前载入。</p>
<hr>
<h4 id="它还有其他参数"><a href="#它还有其他参数" class="headerlink" title="它还有其他参数"></a>它还有其他参数</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">$(&apos;img.lazy&apos;).lazyload(&#123;</div><div class="line">    placeholder:&apos;img/grey.gif&apos;,//用图片提前占位</div><div class="line">    effect:&apos;fadeIn&apos;,//载入时使用何种效果</div><div class="line">    threshold:200,//提前开始下载。threshold,值为数字,代表页面高度.如设置为200,表示滚动条在离目标位置还有200的高度时就开始加载图片,可以做到不让用户察觉</div><div class="line">    event:&apos;click&apos;,//事件触发时才下载。 event,值有click(点击),mouseover(鼠标划过),sporty(运动的),foobar(…)。</div><div class="line">    container:$(&apos;#container&apos;)//对某容器中的图片实现效果。container,值为某容器.lazyload默认在拉动浏览器滚动条时生效,这个参数可以让你在拉动某DIV的滚动条时依次加载其中的图片。</div><div class="line">    failurelimit:10//图片排序混乱时failurelimit,值为数字.lazyload默认在找到第一张不在可见区域里的图片时则不再继续加载,但当HTML容器混乱的时候可能出现可见区域内图片并没加载出来的情况,failurelimit意在加载N张可见区域外的图片,以避免出现这个问题.</div><div class="line">&#125;);</div></pre></td></tr></table></figure>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[chrome的用法--持续收集]]></title>
      <url>http://yoursite.com/2016/10/08/chrome%E7%9A%84%E7%94%A8%E6%B3%95-%E6%8C%81%E7%BB%AD%E6%94%B6%E9%9B%86/</url>
      <content type="html"><![CDATA[<h3 id="之前一直再用chrome调试代码，但今天看到一篇差不多是讲chrome的奇技淫巧。遂整理几个，以后再有，继续补充"><a href="#之前一直再用chrome调试代码，但今天看到一篇差不多是讲chrome的奇技淫巧。遂整理几个，以后再有，继续补充" class="headerlink" title="之前一直再用chrome调试代码，但今天看到一篇差不多是讲chrome的奇技淫巧。遂整理几个，以后再有，继续补充"></a>之前一直再用chrome调试代码，但今天看到一篇差不多是讲chrome的奇技淫巧。遂整理几个，以后再有，继续补充</h3><a id="more"></a>
<h4 id="选取DOM元素"><a href="#选取DOM元素" class="headerlink" title="选取DOM元素"></a>选取DOM元素</h4><p>在一个网页没有引入jQuery的情况下，在控制台里可以通过类似的方法选取DOM：<br>通过<code>$$(&#39;tagName&#39;)</code>或者<code>$$(&#39;.className&#39;)</code>来选择所有匹配规则的DOM元素。选择返回的是一个数组，可以通过数组的方法来访问其中的单个元素。</p>
<hr>
<h4 id="让chrome变成所见即所得的编辑器"><a href="#让chrome变成所见即所得的编辑器" class="headerlink" title="让chrome变成所见即所得的编辑器"></a>让chrome变成所见即所得的编辑器</h4><p>打开开发者控制台，输入<code>document.body.contentEditable=true</code>即可。</p>
<hr>
<h3 id="获取某个DOM元素绑定的事件"><a href="#获取某个DOM元素绑定的事件" class="headerlink" title="获取某个DOM元素绑定的事件"></a>获取某个DOM元素绑定的事件</h3><p>在调试的时候，有时需要知道某个元素上面绑定了上面出发事件，chrome可以让你轻松找到它们。<br><code>getEventListener($(&#39;selector&#39;))</code>方法以数组对象的形式返回某个元素绑定的所有事件。<br>要是你需要选择其中的某个事件，可以通过下面的方法来访问。<br><code>getEventsListener($(&#39;selector&#39;)).eventName[0].listener</code>或者是<code>getEventsListener($(&#39;#firstName&#39;)).click[0].listener</code></p>
<hr>
<h4 id="监测事件"><a href="#监测事件" class="headerlink" title="监测事件"></a>监测事件</h4><p>当你需要监视某个DOM出发的事件时，可以用一下方法：</p>
<ul>
<li><code>monitorEvents($(&#39;selector&#39;))</code>会监测某个元素上绑定的所有事件，一旦该元素的某个事件触发，就会在控制台显示出来。</li>
<li><code>monitorEvents($(&#39;selector&#39;),&#39;eventName&#39;)</code>监听某个元素上绑定的具体事件。</li>
<li><code>monitorEvents($(&#39;selector&#39;),[&#39;eventName1&#39;,&#39;eventName2&#39;,...])</code>监听某个元素上绑定的相应事件。</li>
</ul>
<hr>
<h4 id="用计时器来获取某段代码块的运行时间"><a href="#用计时器来获取某段代码块的运行时间" class="headerlink" title="用计时器来获取某段代码块的运行时间"></a>用计时器来获取某段代码块的运行时间</h4><p>通过<code>console.time(&#39;labelName&#39;)</code>和<code>console.timeEnd(&#39;labelName&#39;)</code>即可得到相应代码运行的时间。</p>
<hr>
<h4 id="以表格形式输出数组"><a href="#以表格形式输出数组" class="headerlink" title="以表格形式输出数组"></a>以表格形式输出数组</h4><p>如果我们有这样一个数组：<code>var myArray=[{a:1,b:2,c:3},{a:1,b:2,c:3,d:4},{k:11,f:22},{a:1,b:2,c:3}]</code>,恰好我们需要以一种表格的形式输出，可以使用<code>console.tabel(variableName)</code>来获取。</p>
<hr>
<h4 id="通过控制台方法监测元素"><a href="#通过控制台方法监测元素" class="headerlink" title="通过控制台方法监测元素"></a>通过控制台方法监测元素</h4><ul>
<li><code>inspect($(&#39;selector&#39;))</code>会检查所有匹配选择器的DOM元素，并返回所有选择器选择的DOM对象。例如<code>inspect($(&#39;#firstName&#39;))</code>选择所有ID是firstName的元素，<code>inspect($(&#39;a&#39;)[3])</code>检测并返回页面上第四个p元素。</li>
<li><code>$0</code>,<code>$1</code>…返回你最近检查过的几个元素，例如<code>$0</code>回返回你最后检查的元素，<code>$1</code>则返回倒数第二个。</li>
</ul>
<hr>
<h4 id="列出某个元素的所有属性"><a href="#列出某个元素的所有属性" class="headerlink" title="列出某个元素的所有属性"></a>列出某个元素的所有属性</h4><p><code>dir($(&#39;selector&#39;))</code>会返回匹配选择器的DOM元素的所有属性。</p>
<hr>
<h4 id="获取最后计算结果的值"><a href="#获取最后计算结果的值" class="headerlink" title="获取最后计算结果的值"></a>获取最后计算结果的值</h4><p>通过<code>$_</code>来获取最后的计算结果值。</p>
<hr>
<h4 id="清空控制台输出"><a href="#清空控制台输出" class="headerlink" title="清空控制台输出"></a>清空控制台输出</h4><ul>
<li>clear()</li>
<li>window–ctrl+l</li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[JS十种排序算法（未完成）]]></title>
      <url>http://yoursite.com/2016/09/29/JS%E5%8D%81%E7%A7%8D%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%EF%BC%88%E6%9C%AA%E5%AE%8C%E6%88%90%EF%BC%89/</url>
      <content type="html"><![CDATA[<h3 id="参考网上的教程打算把JS的十种排序算法搞清楚，奈何实在太难。看到第五种手指头就已经脱离键盘了。"><a href="#参考网上的教程打算把JS的十种排序算法搞清楚，奈何实在太难。看到第五种手指头就已经脱离键盘了。" class="headerlink" title="参考网上的教程打算把JS的十种排序算法搞清楚，奈何实在太难。看到第五种手指头就已经脱离键盘了。"></a>参考网上的教程打算把JS的十种排序算法搞清楚，奈何实在太难。看到第五种手指头就已经脱离键盘了。</h3><a id="more"></a>
<ul>
<li><p>冒泡排序 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">function bubbleSort(arr) &#123;</div><div class="line">	var len = arr.length;</div><div class="line">	for (var i=0; i &lt; len; i++) &#123;</div><div class="line">		for (var j=0; j &lt; len - 1 - i; j++) &#123;</div><div class="line">			if (arr[j] &gt; arr[j+1]) &#123;</div><div class="line">				var temp = arr[j+1];</div><div class="line">				arr[j+1] = arr[j];</div><div class="line">				arr[j] = temp;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">	return arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>改进后的冒泡排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">function bubbleSort2(arr) &#123;</div><div class="line">	var i = arr.length - 1;</div><div class="line">	while(i &gt; 0) &#123;</div><div class="line">		var pos = 0;</div><div class="line">		for (var j=0; j &lt; i; j++) &#123;</div><div class="line">			if (arr[j] &gt; arr[j+1]) &#123;</div><div class="line">				pos = j;</div><div class="line">				var temp = arr[j];</div><div class="line">				arr[j] = arr[j+1];</div><div class="line">				arr[j+1] = temp; </div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">		i = pos;</div><div class="line">	&#125;</div><div class="line">	return arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>正向反向查询-冒泡排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line">function bubbleSort3(arr) &#123;</div><div class="line">	var low = 0;</div><div class="line">	var high = arr.length - 1;</div><div class="line">	var temp, i;</div><div class="line">	while(low &lt; high) &#123;</div><div class="line">		for (j=low; j &lt; high; ++j)</div><div class="line">		if (arr[j] &gt; arr[j+1]) &#123;</div><div class="line">			temp = arr[j];</div><div class="line">			arr[j] = arr[j+1];</div><div class="line">			arr[j+1] = temp;</div><div class="line">		&#125;</div><div class="line">		--high;</div><div class="line"></div><div class="line">		for(j=high; j &gt; low; --j)</div><div class="line">			if (arr[j] &lt; arr[j-1]) &#123;</div><div class="line">				temp = arr[j];</div><div class="line">				arr[j] = arr[j-1];</div><div class="line">				arr[j-1] = arr[j];	</div><div class="line">			&#125;</div><div class="line">		++low;</div><div class="line">	&#125;</div><div class="line">	return arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>选择排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">function selectionSort(arr) &#123;</div><div class="line">	var len = arr.length;</div><div class="line">	var minIndex, temp;</div><div class="line">	for(var i=0; i &lt; len - 1; i++) &#123;</div><div class="line">		minIndex = i;</div><div class="line">		for(var j=i + 1; j &lt; len; j++) &#123;</div><div class="line">			if (arr[j] &lt; arr[minIndex]) &#123;</div><div class="line">				minIndex = j;</div><div class="line">			&#125;	</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		temp = arr[i];</div><div class="line">		arr[i] = arr[minIndex];</div><div class="line">		arr[minIndex] = temp;</div><div class="line">	&#125;</div><div class="line">	return arr;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
<li><p>插入排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">function insertionSort(arr) &#123;</div><div class="line">	if (Object.prototype.toString.call(arr).slice(8,-1) === &quot;Array&quot;) &#123;</div><div class="line">		for(var i=1; i &lt; arr.length; i++) &#123;</div><div class="line">			var key = arr[i];</div><div class="line">			var j = i - 1;</div><div class="line">			while(j &gt;= 0 &amp;&amp; arr[j] &gt; key) &#123;</div><div class="line">				arr[j+1] = arr[j];</div><div class="line">				j--;</div><div class="line">			&#125;</div><div class="line">			arr[j+1] = key;</div><div class="line">		&#125;</div><div class="line">		return arr;</div><div class="line">	&#125; else &#123;</div><div class="line">		return &apos;arr is not an Array!&apos;;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</div><div class="line">console.log(insertionSort(arr));</div></pre></td></tr></table></figure>
</li>
<li><p>用二分查找改进插入排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">function insertionSort2(arr) &#123;</div><div class="line">	if (Object.prototype.toString.call(arr).slice(8,-1) === &quot;Array&quot;) &#123;</div><div class="line">		for(var i=1, len=arr.length; i &lt; len; i++) &#123;</div><div class="line">			var key = arr[i],</div><div class="line">				left = 0,</div><div class="line">				right = i - 1;</div><div class="line">				while(left &lt;= right) &#123;</div><div class="line">					var middle = parseInt((left + right) /2);</div><div class="line">					if (key &lt; arr[middle]) &#123;</div><div class="line">						right = middle - 1;</div><div class="line">					&#125; else &#123;</div><div class="line">						left = middle + 1;</div><div class="line">					&#125;</div><div class="line">				&#125;</div><div class="line"></div><div class="line">				for(var j=i-1; j &gt; left; j--) &#123;</div><div class="line">					arr[j+1] = arr[j];</div><div class="line">				&#125;				</div><div class="line">				arr[left] = key;</div><div class="line">		&#125; </div><div class="line">		return arr;</div><div class="line">	&#125;else &#123;</div><div class="line">		return &apos;array si not an Array&apos;;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</div><div class="line">console.log(insertionSort2(arr));</div></pre></td></tr></table></figure>
</li>
<li><p>希尔排序*(已经不懂什么意思)</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">var shellSort = function(arr) &#123;</div><div class="line">	var len = arr.length,</div><div class="line">		temp,</div><div class="line">		gap = 1;</div><div class="line">	while(gap &lt; (len / 5)) &#123;</div><div class="line">		gap = gap * 5 + 1;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	for(gap; gap &gt; 0; gap = Math.floor(gap / 5)) &#123;</div><div class="line">		for(var i = gap; i &lt; len; i++) &#123;</div><div class="line">			temp = arr[i];</div><div class="line">			for(var j = i - gap; j &gt;= 0 &amp;&amp; arr[j] &gt; temp; j -= gap) &#123;</div><div class="line">				arr[j + gap] = arr[j];</div><div class="line">				/*console.log(i);</div><div class="line">				console.log(j);</div><div class="line">				console.log(j+gap);*/</div><div class="line">			&#125;</div><div class="line"></div><div class="line">			arr[j + gap] = temp;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	return arr;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</div><div class="line">console.log(shellSort(arr));</div></pre></td></tr></table></figure>
</li>
<li><p>归并排序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">function mergeSort(arr) &#123;</div><div class="line">	var len = arr.length;</div><div class="line">	if (len &lt; 2) &#123;</div><div class="line">		return arr;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	var middle = Math.floor(len / 2),</div><div class="line">		left = arr.slice(0, middle),</div><div class="line">		right = arr.slice(middle);</div><div class="line">		return merge(mergeSort(left),mergeSort(right));</div><div class="line">&#125;</div><div class="line"></div><div class="line">function merge(left,right) &#123;</div><div class="line">	var result = [];</div><div class="line">	while(left.length &amp;&amp; right.length) &#123;</div><div class="line">		if (left[0] &lt;= right[0]) &#123;</div><div class="line">			result.push(left.shift());</div><div class="line">		&#125; else &#123;</div><div class="line">			result.push(right.shift());</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	while(left.length) &#123;</div><div class="line">		result.push(left.shift());</div><div class="line">	&#125;</div><div class="line">	while(right.length) &#123;</div><div class="line">		result.push(right.shift());</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	return result;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var arr=[3,44,38,5,47,15,36,26,27,2,46,4,19,50,48];</div><div class="line">console.log(mergeSort(arr));</div></pre></td></tr></table></figure></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[(终于完成啦)]]></title>
      <url>http://yoursite.com/2016/09/28/%E7%BB%88%E4%BA%8E%E5%AE%8C%E6%88%90%E5%95%A6/</url>
      <content type="html"></content>
    </entry>
    
  
  
    
    <entry>
      <title><![CDATA[tags]]></title>
      <url>http://yoursite.com/tags/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[categories]]></title>
      <url>http://yoursite.com/categories/index.html</url>
      <content type="html"></content>
    </entry>
    
    <entry>
      <title><![CDATA[about]]></title>
      <url>http://yoursite.com/about/index.html</url>
      <content type="html"><![CDATA[<h1 id="写些什么好呢？"><a href="#写些什么好呢？" class="headerlink" title="写些什么好呢？"></a>写些什么好呢？</h1>]]></content>
    </entry>
    
  
</search>
